plugins {
    id "java-conventions"
    id "jacoco-report-aggregation"
    id "application"
    id "org.springframework.boot" version "3.2.4"
    id "io.spring.dependency-management" version "1.1.4"
}

group "com.fullcycle.subscription.infrastructure"

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

ext {
//    cache2k = "2.6.1.Final"
    springdoc = "1.8.0"
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

//    implementation("com.google.guava:guava:33.0.0-jre")

    implementation("com.fasterxml.jackson.module:jackson-module-blackbird")

//    implementation("io.github.resilience4j:resilience4j-spring-boot3")
//    implementation("io.github.resilience4j:resilience4j-bulkhead")
//    implementation("io.github.resilience4j:resilience4j-circuitbreaker")
//    implementation("io.github.resilience4j:resilience4j-retry")

//    implementation("org.cache2k:cache2k-api:$cache2k")
//    implementation("org.cache2k:cache2k-spring:$cache2k")
//    runtimeOnly("org.cache2k:cache2k-core:$cache2k")

    implementation("org.springdoc:springdoc-openapi-webmvc-core:$springdoc")
    implementation("org.springdoc:springdoc-openapi-ui:$springdoc")

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
//    implementation("org.springframework.boot:spring-boot-starter-aop")
//    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
//    implementation("org.springframework.boot:spring-boot-starter-graphql")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
//    implementation("org.springframework.boot:spring-boot-starter-data-elasticsearch")
//    implementation("org.springframework.cloud:spring-cloud-contract-wiremock")
//    implementation("org.springframework.kafka:spring-kafka")

    testImplementation(project(path: ":domain", configuration: "testClasses"))

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
//    testImplementation("org.springframework.graphql:spring-graphql-test")
//    testImplementation("org.springframework.kafka:spring-kafka-test")
    testImplementation("org.springframework.security:spring-security-test")

    testImplementation("org.testcontainers:testcontainers:1.18.3")
//    testImplementation("org.testcontainers:elasticsearch:1.18.3")
//    testImplementation("org.testcontainers:kafka:1.18.3")
    testImplementation("org.testcontainers:junit-jupiter:1.18.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
    }
}

testCodeCoverageReport {
    reports {
        xml.required = true
        xml.outputLocation = file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")

        html.required = true
        html.outputLocation = file("$rootDir/build/reports/jacoco/test/")
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}